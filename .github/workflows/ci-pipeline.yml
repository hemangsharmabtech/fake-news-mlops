name: MLOps CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-pipeline:
    name: Test DVC Pipeline
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "dvc[s3]"

    - name: Debug - Check if secrets are set
      run: |
        echo "Checking if AWS secrets are available..."
        if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "✅ AWS_ACCESS_KEY_ID is set"
        else
          echo "❌ AWS_ACCESS_KEY_ID is NOT set"
        fi
        
        if [ -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "✅ AWS_SECRET_ACCESS_KEY is set"
        else
          echo "❌ AWS_SECRET_ACCESS_KEY is NOT set"
        fi
        
        if [ -n "${{ secrets.AWS_REGION }}" ]; then
          echo "✅ AWS_REGION is set: ${{ secrets.AWS_REGION }}"
        else
          echo "❌ AWS_REGION is NOT set"
        fi
        
        if [ -n "${{ secrets.DVC_S3_BUCKET }}" ]; then
          echo "✅ DVC_S3_BUCKET is set: ${{ secrets.DVC_S3_BUCKET }}"
        else
          echo "❌ DVC_S3_BUCKET is NOT set"
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Verify AWS credentials
      run: |
        echo "Testing AWS credentials..."
        aws sts get-caller-identity
        echo "✅ AWS credentials working!"

    - name: Setup DVC
      run: |
        dvc remote add myremote ${{ secrets.DVC_S3_BUCKET }}
        dvc remote modify myremote region ${{ secrets.AWS_REGION }}

    - name: Test DVC remote
      run: |
        echo "Testing DVC remote configuration..."
        dvc remote list
        dvc status -r myremote

    - name: Run basic pipeline validation
      run: |
        echo "Running basic validations..."
        # Test that essential files exist
        ls -la dvc.yaml params.yaml
        # Validate YAML files
        python -c "import yaml; yaml.safe_load(open('dvc.yaml')); print('✅ dvc.yaml valid')"
        python -c "import yaml; yaml.safe_load(open('params.yaml')); print('✅ params.yaml valid')"

    - name: Upload validation report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: |
          dvc.yaml
          params.yaml
        retention-days: 1
